Û	
MC:\revature\project0\daniel-project0\redrobin\RedRobin.DataAccess\Customer.cs
	namespace 	
RedRobin
 
. 

DataAccess 
{ 
public 

partial 
class 
Customer !
{ 
public 
Customer 
( 
) 
{		 	
Orders

 
=

 
new

 
HashSet

  
<

  !
Orders

! '
>

' (
(

( )
)

) *
;

* +
} 	
public 
int 

CustomerId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
CustName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
	CustPhone 
{  !
get" %
;% &
set' *
;* +
}, -
public 
virtual 
ICollection "
<" #
Orders# )
>) *
Orders+ 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
} 
} ¯	
KC:\revature\project0\daniel-project0\redrobin\RedRobin.DataAccess\IngPro.cs
	namespace 	
RedRobin
 
. 

DataAccess 
{ 
public 

partial 
class 
IngPro 
{ 
public 
int 
IngProId 
{ 
get !
;! "
set# &
;& '
}( )
public		 
int		 
IngredientId		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
int

 
	ProductId

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
decimal 
Qty 
{ 
get  
;  !
set" %
;% &
}' (
public 
virtual 
Ingredients "

Ingredient# -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 
virtual 
Product 
Product &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
} 
} ä
PC:\revature\project0\daniel-project0\redrobin\RedRobin.DataAccess\Ingredients.cs
	namespace 	
RedRobin
 
. 

DataAccess 
{ 
public 

partial 
class 
Ingredients $
{ 
public 
Ingredients 
( 
) 
{		 	
IngPro

 
=

 
new

 
HashSet

  
<

  !
IngPro

! '
>

' (
(

( )
)

) *
;

* +
ResIng 
= 
new 
HashSet  
<  !
ResIng! '
>' (
(( )
)) *
;* +
} 	
public 
int 
IngredientId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
IngName 
{ 
get  #
;# $
set% (
;( )
}* +
public 
decimal 
IngCost 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ICollection "
<" #
IngPro# )
>) *
IngPro+ 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public 
virtual 
ICollection "
<" #
ResIng# )
>) *
ResIng+ 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
} 
} ˆ∫
KC:\revature\project0\daniel-project0\redrobin\RedRobin.DataAccess\Mapper.cs
	namespace 	
RedRobin
 
. 

DataAccess 
{ 
public 

static 
class 
Mapper 
{		 
public 
static 
Library 
. 
Models $
.$ %

Restaurant% /
Map0 3
(3 4

Restaurant4 >

restaurant? I
)I J
=>K M
newN Q
LibraryR Y
.Y Z
ModelsZ `
.` a

Restauranta k
{ 	
Id 
= 

restaurant 
. 
RestaurantId (
,( )
Location 
= 

restaurant !
.! "
RestLocation" .
,. /
Phone 
= 

restaurant 
. 
	RestPhone (
} 	
;	 

public 
static 

Restaurant  
Map! $
($ %
Library% ,
., -
Models- 3
.3 4

Restaurant4 >

restaurant? I
)I J
=>K M
newN Q

RestaurantR \
{ 	
RestaurantId 
= 

restaurant %
.% &
Id& (
,( )
RestLocation 
= 

restaurant %
.% &
Location& .
,. /
	RestPhone 
= 

restaurant "
." #
Phone# (
} 	
;	 

public 
static 
IEnumerable !
<! "
Library" )
.) *
Models* 0
.0 1

Restaurant1 ;
>; <
Map= @
(@ A
IEnumerableA L
<L M

RestaurantM W
>W X
restaurantsY d
)d e
=>f h
restaurantsi t
.t u
Selectu {
({ |
Map| 
)	 Ä
;
Ä Å
public 
static 
IEnumerable !
<! "

Restaurant" ,
>, -
Map. 1
(1 2
IEnumerable2 =
<= >
Library> E
.E F
ModelsF L
.L M

RestaurantM W
>W X
restaurantsY d
)d e
=>f h
restaurantsi t
.t u
Selectu {
({ |
Map| 
)	 Ä
;
Ä Å
public!! 
static!! 
Library!! 
.!! 
Models!! $
.!!$ %
	Customers!!% .
Map!!/ 2
(!!2 3
Customer!!3 ;
customer!!< D
)!!D E
=>!!F H
new!!I L
Library!!M T
.!!T U
Models!!U [
.!![ \
	Customers!!\ e
{"" 	
Id## 
=## 
customer## 
.## 

CustomerId## $
,##$ %
Name$$ 
=$$ 
customer$$ 
.$$ 
CustName$$ $
,$$$ %
Phone%% 
=%% 
customer%% 
.%% 
	CustPhone%% &
}&& 	
;&&	 

public(( 
static(( 
Customer(( 
Map(( "
(((" #
Library((# *
.((* +
Models((+ 1
.((1 2
	Customers((2 ;
customer((< D
)((D E
=>((F H
new((I L
Customer((M U
{)) 	

CustomerId** 
=** 
customer** !
.**! "
Id**" $
,**$ %
CustName++ 
=++ 
customer++ 
.++  
Name++  $
,++$ %
	CustPhone,, 
=,, 
customer,,  
.,,  !
Phone,,! &
}-- 	
;--	 

public// 
static// 
IEnumerable// !
<//! "
Library//" )
.//) *
Models//* 0
.//0 1
	Customers//1 :
>//: ;
Map//< ?
(//? @
IEnumerable//@ K
<//K L
Customer//L T
>//T U
	customers//V _
)//_ `
=>//a c
	customers//d m
.//m n
Select//n t
(//t u
Map//u x
)//x y
;//y z
public00 
static00 
IEnumerable00 !
<00! "
Customer00" *
>00* +
Map00, /
(00/ 0
IEnumerable000 ;
<00; <
Library00< C
.00C D
Models00D J
.00J K
	Customers00K T
>00T U
	customers00V _
)00_ `
=>00a c
	customers00d m
.00m n
Select00n t
(00t u
Map00u x
)00x y
;00y z
public44 
static44 
Library44 
.44 
Models44 $
.44$ % 
IngredientsInventory44% 9
Map44: =
(44= >
Ingredients44> I

ingredient44J T
)44T U
=>44V X
new44Y \
Library44] d
.44d e
Models44e k
.44k l!
IngredientsInventory	44l Ä
{55 	
Id66 
=66 

ingredient66 
.66 
IngredientId66 (
,66( )
Name77 
=77 

ingredient77 
.77 
IngName77 %
,77% &
Cost88 
=88 

ingredient88 
.88 
IngCost88 %
,88% &
}99 	
;99	 

public;; 
static;; 
Ingredients;; !
Map;;" %
(;;% &
Library;;& -
.;;- .
Models;;. 4
.;;4 5 
IngredientsInventory;;5 I

ingredient;;J T
);;T U
=>;;V X
new;;Y \
Ingredients;;] h
{<< 	
IngredientId== 
=== 

ingredient== %
.==% &
Id==& (
,==( )
IngName>> 
=>> 

ingredient>>  
.>>  !
Name>>! %
,>>% &
IngCost?? 
=?? 

ingredient??  
.??  !
Cost??! %
,??% &
}@@ 	
;@@	 

publicBB 
staticBB 
IEnumerableBB !
<BB! "
LibraryBB" )
.BB) *
ModelsBB* 0
.BB0 1 
IngredientsInventoryBB1 E
>BBE F
MapBBG J
(BBJ K
IEnumerableBBK V
<BBV W
IngredientsBBW b
>BBb c
ingredientsBBd o
)BBo p
=>BBq s
ingredientsBBt 
.	BB Ä
Select
BBÄ Ü
(
BBÜ á
Map
BBá ä
)
BBä ã
;
BBã å
publicCC 
staticCC 
IEnumerableCC !
<CC! "
IngredientsCC" -
>CC- .
MapCC/ 2
(CC2 3
IEnumerableCC3 >
<CC> ?
LibraryCC? F
.CCF G
ModelsCCG M
.CCM N 
IngredientsInventoryCCN b
>CCb c
ingredientsCCd o
)CCo p
=>CCq s
ingredientsCCt 
.	CC Ä
Select
CCÄ Ü
(
CCÜ á
Map
CCá ä
)
CCä ã
;
CCã å
publicGG 
staticGG 
LibraryGG 
.GG 
ModelsGG $
.GG$ %
RestIngGG% ,
MapGG- 0
(GG0 1
ResIngGG1 7
resIngredientGG8 E
)GGE F
=>GGG I
newGGJ M
LibraryGGN U
.GGU V
ModelsGGV \
.GG\ ]
RestIngGG] d
{HH 	
resIngIDII 
=II 
resIngredientII $
.II$ %
ResIngIdII% -
,II- .
ingredientIdJJ 
=JJ 
resIngredientJJ (
.JJ( )
IngredientIdJJ) 5
,JJ5 6
restaurantIdKK 
=KK 
resIngredientKK (
.KK( )
RestaurantIdKK) 5
,KK5 6
	resIngQtyLL 
=LL 
resIngredientLL %
.LL% &
QtyLL& )
,LL) *
}OO 	
;OO	 

publicQQ 
staticQQ 
ResIngQQ 
MapQQ  
(QQ  !
LibraryQQ! (
.QQ( )
ModelsQQ) /
.QQ/ 0
RestIngQQ0 7
resIngredientQQ8 E
)QQE F
=>QQG I
newQQJ M
ResIngQQN T
{RR 	
ResIngIdSS 
=SS 
resIngredientSS $
.SS$ %
resIngIDSS% -
,SS- .
IngredientIdTT 
=TT 
resIngredientTT (
.TT( )
ingredientIdTT) 5
,TT5 6
RestaurantIdUU 
=UU 
resIngredientUU (
.UU( )
restaurantIdUU) 5
,UU5 6
QtyVV 
=VV 
resIngredientVV 
.VV  
	resIngQtyVV  )
,VV) *
}YY 	
;YY	 

public[[ 
static[[ 
IEnumerable[[ !
<[[! "
Library[[" )
.[[) *
Models[[* 0
.[[0 1
RestIng[[1 8
>[[8 9
Map[[: =
([[= >
IEnumerable[[> I
<[[I J
ResIng[[J P
>[[P Q
resIngredientPro[[R b
)[[b c
=>[[d f
resIngredientPro[[g w
.[[w x
Select[[x ~
([[~ 
Map	[[ Ç
)
[[Ç É
;
[[É Ñ
public\\ 
static\\ 
IEnumerable\\ !
<\\! "
ResIng\\" (
>\\( )
Map\\* -
(\\- .
IEnumerable\\. 9
<\\9 :
Library\\: A
.\\A B
Models\\B H
.\\H I
RestIng\\I P
>\\P Q
resIngredientPro\\R b
)\\b c
=>\\d f
resIngredientPro\\g w
.\\w x
Select\\x ~
(\\~ 
Map	\\ Ç
)
\\Ç É
;
\\É Ñ
publicbb 
staticbb 
Librarybb 
.bb 
Modelsbb $
.bb$ %
Productsbb% -
Mapbb. 1
(bb1 2
Productbb2 9
productbb: A
)bbA B
=>bbC E
newbbF I
LibrarybbJ Q
.bbQ R
ModelsbbR X
.bbX Y
ProductsbbY a
{cc 	
Iddd 
=dd 
productdd 
.dd 
	ProductIddd "
,dd" #
Nameee 
=ee 
productee 
.ee 
ProNameee "
,ee" #
Typeff 
=ff 
productff 
.ff 
ProTypeff "
,ff" #
Costgg 
=gg 
productgg 
.gg 
ProCostgg "
,gg" #
}hh 	
;hh	 

publicjj 
staticjj 
Productjj 
Mapjj !
(jj! "
Libraryjj" )
.jj) *
Modelsjj* 0
.jj0 1
Productsjj1 9
productjj: A
)jjA B
=>jjC E
newjjF I
ProductjjJ Q
{kk 	
	ProductIdll 
=ll 
productll 
.ll  
Idll  "
,ll" #
ProNamemm 
=mm 
productmm 
.mm 
Namemm "
,mm" #
ProTypenn 
=nn 
productnn 
.nn 
Typenn "
,nn" #
ProCostoo 
=oo 
productoo 
.oo 
Costoo "
,oo" #
}pp 	
;pp	 

publicrr 
staticrr 
IEnumerablerr !
<rr! "
Libraryrr" )
.rr) *
Modelsrr* 0
.rr0 1
Productsrr1 9
>rr9 :
Maprr; >
(rr> ?
IEnumerablerr? J
<rrJ K
ProductrrK R
>rrR S
productrrT [
)rr[ \
=>rr] _
productrr` g
.rrg h
Selectrrh n
(rrn o
Maprro r
)rrr s
;rrs t
publicss 
staticss 
IEnumerabless !
<ss! "
Productss" )
>ss) *
Mapss+ .
(ss. /
IEnumerabless/ :
<ss: ;
Libraryss; B
.ssB C
ModelsssC I
.ssI J
ProductsssJ R
>ssR S
productssT [
)ss[ \
=>ss] _
productss` g
.ssg h
Selectssh n
(ssn o
Mapsso r
)ssr s
;sss t
publicww 
staticww 
Libraryww 
.ww 
Modelsww $
.ww$ %
IngProww% +
Mapww, /
(ww/ 0
IngProww0 6
ingProductsww7 B
)wwB C
=>wwD F
newwwG J
LibrarywwK R
.wwR S
ModelswwS Y
.wwY Z
IngProwwZ `
{xx 	
ingProIDyy 
=yy 
ingProductsyy "
.yy" #
IngProIdyy# +
,yy+ ,
	productIdzz 
=zz 
ingProductszz #
.zz# $
	ProductIdzz$ -
,zz- .
ingredientId{{ 
={{ 
ingProducts{{ &
.{{& '
IngredientId{{' 3
,{{3 4
	ingProQty|| 
=|| 
ingProducts|| #
.||# $
Qty||$ '
,||' (
} 	
;	 

public
ÅÅ 
static
ÅÅ 
IngPro
ÅÅ 
Map
ÅÅ  
(
ÅÅ  !
Library
ÅÅ! (
.
ÅÅ( )
Models
ÅÅ) /
.
ÅÅ/ 0
IngPro
ÅÅ0 6
ingProducts
ÅÅ7 B
)
ÅÅB C
=>
ÅÅD F
new
ÅÅG J
IngPro
ÅÅK Q
{
ÇÇ 	
IngProId
ÉÉ 
=
ÉÉ 
ingProducts
ÉÉ "
.
ÉÉ" #
ingProID
ÉÉ# +
,
ÉÉ+ ,
	ProductId
ÑÑ 
=
ÑÑ 
ingProducts
ÑÑ #
.
ÑÑ# $
	productId
ÑÑ$ -
,
ÑÑ- .
IngredientId
ÖÖ 
=
ÖÖ 
ingProducts
ÖÖ &
.
ÖÖ& '
ingredientId
ÖÖ' 3
,
ÖÖ3 4
Qty
ÜÜ 
=
ÜÜ 
ingProducts
ÜÜ 
.
ÜÜ 
	ingProQty
ÜÜ '
,
ÜÜ' (
}
àà 	
;
àà	 

public
ää 
static
ää 
IEnumerable
ää !
<
ää! "
Library
ää" )
.
ää) *
Models
ää* 0
.
ää0 1
IngPro
ää1 7
>
ää7 8
Map
ää9 <
(
ää< =
IEnumerable
ää= H
<
ääH I
IngPro
ääI O
>
ääO P
ingProducts
ääQ \
)
ää\ ]
=>
ää^ `
ingProducts
ääa l
.
ääl m
Select
ääm s
(
ääs t
Map
äät w
)
ääw x
;
ääx y
public
ãã 
static
ãã 
IEnumerable
ãã !
<
ãã! "
IngPro
ãã" (
>
ãã( )
Map
ãã* -
(
ãã- .
IEnumerable
ãã. 9
<
ãã9 :
Library
ãã: A
.
ããA B
Models
ããB H
.
ããH I
IngPro
ããI O
>
ããO P
ingProducts
ããQ \
)
ãã\ ]
=>
ãã^ `
ingProducts
ããa l
.
ããl m
Select
ããm s
(
ããs t
Map
ããt w
)
ããw x
;
ããx y
public
èè 
static
èè 
Library
èè 
.
èè 
Models
èè $
.
èè$ %
ResPro
èè% +
Map
èè, /
(
èè/ 0
ResPro
èè0 6
resProducts
èè7 B
)
èèB C
=>
èèD F
new
èèG J
Library
èèK R
.
èèR S
Models
èèS Y
.
èèY Z
ResPro
èèZ `
{
êê 	
resProID
ëë 
=
ëë 
resProducts
ëë "
.
ëë" #
ResProId
ëë# +
,
ëë+ ,
	productId
íí 
=
íí 
resProducts
íí #
.
íí# $
	ProductId
íí$ -
,
íí- .
restaurantId
ìì 
=
ìì 
resProducts
ìì &
.
ìì& '
RestaurantId
ìì' 3
,
ìì3 4
}
îî 	
;
îî	 

public
ññ 
static
ññ 
ResPro
ññ 
Map
ññ  
(
ññ  !
Library
ññ! (
.
ññ( )
Models
ññ) /
.
ññ/ 0
ResPro
ññ0 6
resProducts
ññ7 B
)
ññB C
=>
ññD F
new
ññG J
ResPro
ññK Q
{
óó 	
ResProId
òò 
=
òò 
resProducts
òò "
.
òò" #
resProID
òò# +
,
òò+ ,
	ProductId
ôô 
=
ôô 
resProducts
ôô #
.
ôô# $
	productId
ôô$ -
,
ôô- .
RestaurantId
öö 
=
öö 
resProducts
öö &
.
öö& '
restaurantId
öö' 3
,
öö3 4
}
õõ 	
;
õõ	 

public
ùù 
static
ùù 
IEnumerable
ùù !
<
ùù! "
Library
ùù" )
.
ùù) *
Models
ùù* 0
.
ùù0 1
ResPro
ùù1 7
>
ùù7 8
Map
ùù9 <
(
ùù< =
IEnumerable
ùù= H
<
ùùH I
ResPro
ùùI O
>
ùùO P
resProducts
ùùQ \
)
ùù\ ]
=>
ùù^ `
resProducts
ùùa l
.
ùùl m
Select
ùùm s
(
ùùs t
Map
ùùt w
)
ùùw x
;
ùùx y
public
ûû 
static
ûû 
IEnumerable
ûû !
<
ûû! "
ResPro
ûû" (
>
ûû( )
Map
ûû* -
(
ûû- .
IEnumerable
ûû. 9
<
ûû9 :
Library
ûû: A
.
ûûA B
Models
ûûB H
.
ûûH I
ResPro
ûûI O
>
ûûO P
resProducts
ûûQ \
)
ûû\ ]
=>
ûû^ `
resProducts
ûûa l
.
ûûl m
Select
ûûm s
(
ûûs t
Map
ûût w
)
ûûw x
;
ûûx y
public
¢¢ 
static
¢¢ 
Library
¢¢ 
.
¢¢ 
Models
¢¢ $
.
¢¢$ %
Orders
¢¢% +
Map
¢¢, /
(
¢¢/ 0
Orders
¢¢0 6
orders
¢¢7 =
)
¢¢= >
=>
¢¢? A
new
¢¢B E
Library
¢¢F M
.
¢¢M N
Models
¢¢N T
.
¢¢T U
Orders
¢¢U [
{
££ 	
Id
§§ 
=
§§ 
orders
§§ 
.
§§ 
OrderId
§§ 
,
§§  
restaurantID
•• 
=
•• 
orders
•• !
.
••! "
RestaurantId
••" .
,
••. /
	cutomerID
¶¶ 
=
¶¶ 
orders
¶¶ 
.
¶¶ 

CustomerId
¶¶ )
,
¶¶) *
	orderDate
ßß 
=
ßß 
orders
ßß 
.
ßß 
OrdDate
ßß &
,
ßß& '
	CostTotal
®® 
=
®® 
orders
®® 
.
®® 
OrdCost
®® &
,
®®& '
Products
©© 
=
©© 
Map
©© 
(
©© 
orders
©© !
.
©©! "
OrderProduct
©©" .
)
©©. /
.
©©/ 0
ToList
©©0 6
(
©©6 7
)
©©7 8
}
™™ 	
;
™™	 

public
¨¨ 
static
¨¨ 
Orders
¨¨ 
Map
¨¨  
(
¨¨  !
Library
¨¨! (
.
¨¨( )
Models
¨¨) /
.
¨¨/ 0
Orders
¨¨0 6
orders
¨¨7 =
)
¨¨= >
=>
¨¨? A
new
¨¨B E
Orders
¨¨F L
{
≠≠ 	
OrderId
ÆÆ 
=
ÆÆ 
orders
ÆÆ 
.
ÆÆ 
Id
ÆÆ 
,
ÆÆ  

CustomerId
ØØ 
=
ØØ 
orders
ØØ 
.
ØØ  
	cutomerID
ØØ  )
,
ØØ) *
OrdDate
∞∞ 
=
∞∞ 
orders
∞∞ 
.
∞∞ 
	orderDate
∞∞ &
,
∞∞& '
OrdCost
±± 
=
±± 
orders
±± 
.
±± 
	CostTotal
±± &
,
±±& '
RestaurantId
≤≤ 
=
≤≤ 
orders
≤≤ !
.
≤≤! "
restaurantID
≤≤" .
,
≤≤. /
OrderProduct
≥≥ 
=
≥≥ 
Map
≥≥ 
(
≥≥ 
orders
≥≥ %
.
≥≥% &
Products
≥≥& .
)
≥≥. /
.
≥≥/ 0
ToList
≥≥0 6
(
≥≥6 7
)
≥≥7 8
}
¥¥ 	
;
¥¥	 

public
∂∂ 
static
∂∂ 
IEnumerable
∂∂ !
<
∂∂! "
Library
∂∂" )
.
∂∂) *
Models
∂∂* 0
.
∂∂0 1
Orders
∂∂1 7
>
∂∂7 8
Map
∂∂9 <
(
∂∂< =
IEnumerable
∂∂= H
<
∂∂H I
Orders
∂∂I O
>
∂∂O P
orders
∂∂Q W
)
∂∂W X
=>
∂∂Y [
orders
∂∂\ b
.
∂∂b c
Select
∂∂c i
(
∂∂i j
Map
∂∂j m
)
∂∂m n
;
∂∂n o
public
∑∑ 
static
∑∑ 
IEnumerable
∑∑ !
<
∑∑! "
Orders
∑∑" (
>
∑∑( )
Map
∑∑* -
(
∑∑- .
IEnumerable
∑∑. 9
<
∑∑9 :
Library
∑∑: A
.
∑∑A B
Models
∑∑B H
.
∑∑H I
Orders
∑∑I O
>
∑∑O P
orders
∑∑Q W
)
∑∑W X
=>
∑∑Y [
orders
∑∑\ b
.
∑∑b c
Select
∑∑c i
(
∑∑i j
Map
∑∑j m
)
∑∑m n
;
∑∑n o
public
ºº 
static
ºº 
Library
ºº 
.
ºº 
Models
ºº $
.
ºº$ %
OrdPro
ºº% +
Map
ºº, /
(
ºº/ 0
OrderProduct
ºº0 <
ordPro
ºº= C
)
ººC D
=>
ººE G
new
ººH K
Library
ººL S
.
ººS T
Models
ººT Z
.
ººZ [
OrdPro
ºº[ a
{
ΩΩ 	
ordProID
ææ 
=
ææ 
ordPro
ææ 
.
ææ 
OrdProId
ææ &
,
ææ& '
	productId
øø 
=
øø 
ordPro
øø 
.
øø 
	ProductId
øø (
,
øø( )
orderId
¿¿ 
=
¿¿ 
ordPro
¿¿ 
.
¿¿ 
OrderId
¿¿ $
,
¿¿$ %
}
¡¡ 	
;
¡¡	 

public
√√ 
static
√√ 
OrderProduct
√√ "
Map
√√# &
(
√√& '
Library
√√' .
.
√√. /
Models
√√/ 5
.
√√5 6
OrdPro
√√6 <
ordPro
√√= C
)
√√C D
=>
√√E G
new
√√H K
OrderProduct
√√L X
{
ƒƒ 	
OrdProId
≈≈ 
=
≈≈ 
ordPro
≈≈ 
.
≈≈ 
ordProID
≈≈ &
,
≈≈& '
	ProductId
∆∆ 
=
∆∆ 
ordPro
∆∆ 
.
∆∆ 
	productId
∆∆ (
,
∆∆( )
OrderId
«« 
=
«« 
ordPro
«« 
.
«« 
orderId
«« $
,
««$ %
}
»» 	
;
»»	 

public
   
static
   
IEnumerable
   !
<
  ! "
Library
  " )
.
  ) *
Models
  * 0
.
  0 1
OrdPro
  1 7
>
  7 8
Map
  9 <
(
  < =
IEnumerable
  = H
<
  H I
OrderProduct
  I U
>
  U V
ordPro
  W ]
)
  ] ^
=>
  _ a
ordPro
  b h
.
  h i
Select
  i o
(
  o p
Map
  p s
)
  s t
;
  t u
public
ÀÀ 
static
ÀÀ 
IEnumerable
ÀÀ !
<
ÀÀ! "
OrderProduct
ÀÀ" .
>
ÀÀ. /
Map
ÀÀ0 3
(
ÀÀ3 4
IEnumerable
ÀÀ4 ?
<
ÀÀ? @
Library
ÀÀ@ G
.
ÀÀG H
Models
ÀÀH N
.
ÀÀN O
OrdPro
ÀÀO U
>
ÀÀU V
ordPro
ÀÀW ]
)
ÀÀ] ^
=>
ÀÀ_ a
ordPro
ÀÀb h
.
ÀÀh i
Select
ÀÀi o
(
ÀÀo p
Map
ÀÀp s
)
ÀÀs t
;
ÀÀt u
}
ŒŒ 
}œœ ›
QC:\revature\project0\daniel-project0\redrobin\RedRobin.DataAccess\OrderProduct.cs
	namespace 	
RedRobin
 
. 

DataAccess 
{ 
public 

partial 
class 
OrderProduct %
{ 
public 
int 
OrdProId 
{ 
get !
;! "
set# &
;& '
}( )
public		 
int		 
OrderId		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
int

 
	ProductId

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
virtual 
Orders 
Order #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
virtual 
Product 
Product &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
} 
} §
KC:\revature\project0\daniel-project0\redrobin\RedRobin.DataAccess\Orders.cs
	namespace 	
RedRobin
 
. 

DataAccess 
{ 
public 

partial 
class 
Orders 
{ 
public 
Orders 
( 
) 
{		 	
OrderProduct

 
=

 
new

 
HashSet

 &
<

& '
OrderProduct

' 3
>

3 4
(

4 5
)

5 6
;

6 7
} 	
public 
int 
OrderId 
{ 
get  
;  !
set" %
;% &
}' (
public 
DateTime 
OrdDate 
{  !
get" %
;% &
set' *
;* +
}, -
public 
decimal 
OrdCost 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 

CustomerId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
RestaurantId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
virtual 
Customer 
Customer  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
virtual 

Restaurant !

Restaurant" ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
virtual 
ICollection "
<" #
OrderProduct# /
>/ 0
OrderProduct1 =
{> ?
get@ C
;C D
setE H
;H I
}J K
} 
} º
LC:\revature\project0\daniel-project0\redrobin\RedRobin.DataAccess\Product.cs
	namespace 	
RedRobin
 
. 

DataAccess 
{ 
public 

partial 
class 
Product  
{ 
public 
Product 
( 
) 
{		 	
IngPro

 
=

 
new

 
HashSet

  
<

  !
IngPro

! '
>

' (
(

( )
)

) *
;

* +
OrderProduct 
= 
new 
HashSet &
<& '
OrderProduct' 3
>3 4
(4 5
)5 6
;6 7
ResPro 
= 
new 
HashSet  
<  !
ResPro! '
>' (
(( )
)) *
;* +
} 	
public 
int 
	ProductId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
ProType 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
ProName 
{ 
get  #
;# $
set% (
;( )
}* +
public 
decimal 
ProCost 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ICollection "
<" #
IngPro# )
>) *
IngPro+ 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public 
virtual 
ICollection "
<" #
OrderProduct# /
>/ 0
OrderProduct1 =
{> ?
get@ C
;C D
setE H
;H I
}J K
public 
virtual 
ICollection "
<" #
ResPro# )
>) *
ResPro+ 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
} 
} Ì≈
TC:\revature\project0\daniel-project0\redrobin\RedRobin.DataAccess\RedRobinContext.cs
	namespace 	
RedRobin
 
. 

DataAccess 
{ 
public 

partial 
class 
RedRobinContext (
:) *
	DbContext+ 4
{ 
public		 
RedRobinContext		 
(		 
)		  
{

 	
} 	
public 
RedRobinContext 
( 
DbContextOptions /
</ 0
RedRobinContext0 ?
>? @
optionsA H
)H I
: 
base 
( 
options 
) 
{ 	
} 	
public 
virtual 
DbSet 
< 
Customer %
>% &
Customer' /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public 
virtual 
DbSet 
< 
IngPro #
># $
IngPro% +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
virtual 
DbSet 
< 
Ingredients (
>( )
Ingredients* 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
public 
virtual 
DbSet 
< 
OrderProduct )
>) *
OrderProduct+ 7
{8 9
get: =
;= >
set? B
;B C
}D E
public 
virtual 
DbSet 
< 
Orders #
># $
Orders% +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
virtual 
DbSet 
< 
Product $
>$ %
Product& -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 
virtual 
DbSet 
< 
ResIng #
># $
ResIng% +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
virtual 
DbSet 
< 
ResPro #
># $
ResPro% +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
virtual 
DbSet 
< 

Restaurant '
>' (

Restaurant) 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
HasAnnotation &
(& '
$str' 7
,7 8
$str9 P
)P Q
;Q R
modelBuilder!! 
.!! 
Entity!! 
<!!  
Customer!!  (
>!!( )
(!!) *
entity!!* 0
=>!!1 3
{"" 
entity## 
.## 
ToTable## 
(## 
$str## )
,##) *
$str##+ /
)##/ 0
;##0 1
entity%% 
.%% 
HasIndex%% 
(%%  
e%%  !
=>%%" $
e%%% &
.%%& '
	CustPhone%%' 0
)%%0 1
.&& 
HasName&& 
(&& 
$str&& =
)&&= >
.'' 
IsUnique'' 
('' 
)'' 
;''  
entity)) 
.)) 
Property)) 
())  
e))  !
=>))" $
e))% &
.))& '

CustomerId))' 1
)))1 2
.))2 3
HasColumnName))3 @
())@ A
$str))A M
)))M N
;))N O
entity++ 
.++ 
Property++ 
(++  
e++  !
=>++" $
e++% &
.++& '
CustName++' /
)++/ 0
.,, 

IsRequired,, 
(,,  
),,  !
.-- 
HasMaxLength-- !
(--! "
$num--" %
)--% &
;--& '
entity// 
.// 
Property// 
(//  
e//  !
=>//" $
e//% &
.//& '
	CustPhone//' 0
)//0 1
.00 

IsRequired00 
(00  
)00  !
.11 
HasMaxLength11 !
(11! "
$num11" %
)11% &
;11& '
}22 
)22 
;22 
modelBuilder44 
.44 
Entity44 
<44  
IngPro44  &
>44& '
(44' (
entity44( .
=>44/ 1
{55 
entity66 
.66 
ToTable66 
(66 
$str66 '
,66' (
$str66) -
)66- .
;66. /
entity88 
.88 
Property88 
(88  
e88  !
=>88" $
e88% &
.88& '
IngProId88' /
)88/ 0
.880 1
HasColumnName881 >
(88> ?
$str88? I
)88I J
;88J K
entity:: 
.:: 
Property:: 
(::  
e::  !
=>::" $
e::% &
.::& '
IngredientId::' 3
)::3 4
.::4 5
HasColumnName::5 B
(::B C
$str::C Q
)::Q R
;::R S
entity<< 
.<< 
Property<< 
(<<  
e<<  !
=><<" $
e<<% &
.<<& '
	ProductId<<' 0
)<<0 1
.<<1 2
HasColumnName<<2 ?
(<<? @
$str<<@ K
)<<K L
;<<L M
entity>> 
.>> 
Property>> 
(>>  
e>>  !
=>>>" $
e>>% &
.>>& '
Qty>>' *
)>>* +
.>>+ ,
HasColumnType>>, 9
(>>9 :
$str>>: I
)>>I J
;>>J K
entity@@ 
.@@ 
HasOne@@ 
(@@ 
d@@ 
=>@@  "
d@@# $
.@@$ %

Ingredient@@% /
)@@/ 0
.AA 
WithManyAA 
(AA 
pAA 
=>AA  "
pAA# $
.AA$ %
IngProAA% +
)AA+ ,
.BB 
HasForeignKeyBB "
(BB" #
dBB# $
=>BB% '
dBB( )
.BB) *
IngredientIdBB* 6
)BB6 7
.CC 
HasConstraintNameCC &
(CC& '
$strCC' 2
)CC2 3
;CC3 4
entityEE 
.EE 
HasOneEE 
(EE 
dEE 
=>EE  "
dEE# $
.EE$ %
ProductEE% ,
)EE, -
.FF 
WithManyFF 
(FF 
pFF 
=>FF  "
pFF# $
.FF$ %
IngProFF% +
)FF+ ,
.GG 
HasForeignKeyGG "
(GG" #
dGG# $
=>GG% '
dGG( )
.GG) *
	ProductIdGG* 3
)GG3 4
.HH 
HasConstraintNameHH &
(HH& '
$strHH' 2
)HH2 3
;HH3 4
}II 
)II 
;II 
modelBuilderKK 
.KK 
EntityKK 
<KK  
IngredientsKK  +
>KK+ ,
(KK, -
entityKK- 3
=>KK4 6
{LL 
entityMM 
.MM 
HasKeyMM 
(MM 
eMM 
=>MM  "
eMM# $
.MM$ %
IngredientIdMM% 1
)MM1 2
.NN 
HasNameNN 
(NN 
$strNN =
)NN= >
;NN> ?
entityPP 
.PP 
ToTablePP 
(PP 
$strPP ,
,PP, -
$strPP. 2
)PP2 3
;PP3 4
entityRR 
.RR 
PropertyRR 
(RR  
eRR  !
=>RR" $
eRR% &
.RR& '
IngredientIdRR' 3
)RR3 4
.RR4 5
HasColumnNameRR5 B
(RRB C
$strRRC Q
)RRQ R
;RRR S
entityTT 
.TT 
PropertyTT 
(TT  
eTT  !
=>TT" $
eTT% &
.TT& '
IngCostTT' .
)TT. /
.TT/ 0
HasColumnTypeTT0 =
(TT= >
$strTT> M
)TTM N
;TTN O
entityVV 
.VV 
PropertyVV 
(VV  
eVV  !
=>VV" $
eVV% &
.VV& '
IngNameVV' .
)VV. /
.WW 

IsRequiredWW 
(WW  
)WW  !
.XX 
HasMaxLengthXX !
(XX! "
$numXX" %
)XX% &
;XX& '
}YY 
)YY 
;YY 
modelBuilder[[ 
.[[ 
Entity[[ 
<[[  
OrderProduct[[  ,
>[[, -
([[- .
entity[[. 4
=>[[5 7
{\\ 
entity]] 
.]] 
HasKey]] 
(]] 
e]] 
=>]]  "
e]]# $
.]]$ %
OrdProId]]% -
)]]- .
.^^ 
HasName^^ 
(^^ 
$str^^ =
)^^= >
;^^> ?
entity`` 
.`` 
ToTable`` 
(`` 
$str`` -
,``- .
$str``/ 3
)``3 4
;``4 5
entitybb 
.bb 
Propertybb 
(bb  
ebb  !
=>bb" $
ebb% &
.bb& '
OrdProIdbb' /
)bb/ 0
.bb0 1
HasColumnNamebb1 >
(bb> ?
$strbb? I
)bbI J
;bbJ K
entitydd 
.dd 
Propertydd 
(dd  
edd  !
=>dd" $
edd% &
.dd& '
OrderIddd' .
)dd. /
.dd/ 0
HasColumnNamedd0 =
(dd= >
$strdd> G
)ddG H
;ddH I
entityff 
.ff 
Propertyff 
(ff  
eff  !
=>ff" $
eff% &
.ff& '
	ProductIdff' 0
)ff0 1
.ff1 2
HasColumnNameff2 ?
(ff? @
$strff@ K
)ffK L
;ffL M
entityhh 
.hh 
HasOnehh 
(hh 
dhh 
=>hh  "
dhh# $
.hh$ %
Orderhh% *
)hh* +
.ii 
WithManyii 
(ii 
pii 
=>ii  "
pii# $
.ii$ %
OrderProductii% 1
)ii1 2
.jj 
HasForeignKeyjj "
(jj" #
djj# $
=>jj% '
djj( )
.jj) *
OrderIdjj* 1
)jj1 2
.kk 
HasConstraintNamekk &
(kk& '
$strkk' ;
)kk; <
;kk< =
entitymm 
.mm 
HasOnemm 
(mm 
dmm 
=>mm  "
dmm# $
.mm$ %
Productmm% ,
)mm, -
.nn 
WithManynn 
(nn 
pnn 
=>nn  "
pnn# $
.nn$ %
OrderProductnn% 1
)nn1 2
.oo 
HasForeignKeyoo "
(oo" #
doo# $
=>oo% '
doo( )
.oo) *
	ProductIdoo* 3
)oo3 4
.pp 
HasConstraintNamepp &
(pp& '
$strpp' ;
)pp; <
;pp< =
}qq 
)qq 
;qq 
modelBuilderss 
.ss 
Entityss 
<ss  
Ordersss  &
>ss& '
(ss' (
entityss( .
=>ss/ 1
{tt 
entityuu 
.uu 
HasKeyuu 
(uu 
euu 
=>uu  "
euu# $
.uu$ %
OrderIduu% ,
)uu, -
.vv 
HasNamevv 
(vv 
$strvv ;
)vv; <
;vv< =
entityxx 
.xx 
ToTablexx 
(xx 
$strxx '
,xx' (
$strxx) -
)xx- .
;xx. /
entityzz 
.zz 
Propertyzz 
(zz  
ezz  !
=>zz" $
ezz% &
.zz& '
OrderIdzz' .
)zz. /
.zz/ 0
HasColumnNamezz0 =
(zz= >
$strzz> G
)zzG H
;zzH I
entity|| 
.|| 
Property|| 
(||  
e||  !
=>||" $
e||% &
.||& '

CustomerId||' 1
)||1 2
.||2 3
HasColumnName||3 @
(||@ A
$str||A M
)||M N
;||N O
entity~~ 
.~~ 
Property~~ 
(~~  
e~~  !
=>~~" $
e~~% &
.~~& '
OrdCost~~' .
)~~. /
.~~/ 0
HasColumnType~~0 =
(~~= >
$str~~> M
)~~M N
;~~N O
entity
ÄÄ 
.
ÄÄ 
Property
ÄÄ 
(
ÄÄ  
e
ÄÄ  !
=>
ÄÄ" $
e
ÄÄ% &
.
ÄÄ& '
RestaurantId
ÄÄ' 3
)
ÄÄ3 4
.
ÄÄ4 5
HasColumnName
ÄÄ5 B
(
ÄÄB C
$str
ÄÄC Q
)
ÄÄQ R
;
ÄÄR S
entity
ÇÇ 
.
ÇÇ 
HasOne
ÇÇ 
(
ÇÇ 
d
ÇÇ 
=>
ÇÇ  "
d
ÇÇ# $
.
ÇÇ$ %
Customer
ÇÇ% -
)
ÇÇ- .
.
ÉÉ 
WithMany
ÉÉ 
(
ÉÉ 
p
ÉÉ 
=>
ÉÉ  "
p
ÉÉ# $
.
ÉÉ$ %
Orders
ÉÉ% +
)
ÉÉ+ ,
.
ÑÑ 
HasForeignKey
ÑÑ "
(
ÑÑ" #
d
ÑÑ# $
=>
ÑÑ% '
d
ÑÑ( )
.
ÑÑ) *

CustomerId
ÑÑ* 4
)
ÑÑ4 5
.
ÖÖ 
HasConstraintName
ÖÖ &
(
ÖÖ& '
$str
ÖÖ' 4
)
ÖÖ4 5
;
ÖÖ5 6
entity
áá 
.
áá 
HasOne
áá 
(
áá 
d
áá 
=>
áá  "
d
áá# $
.
áá$ %

Restaurant
áá% /
)
áá/ 0
.
àà 
WithMany
àà 
(
àà 
p
àà 
=>
àà  "
p
àà# $
.
àà$ %
Orders
àà% +
)
àà+ ,
.
ââ 
HasForeignKey
ââ "
(
ââ" #
d
ââ# $
=>
ââ% '
d
ââ( )
.
ââ) *
RestaurantId
ââ* 6
)
ââ6 7
.
ää 
HasConstraintName
ää &
(
ää& '
$str
ää' 6
)
ää6 7
;
ää7 8
}
ãã 
)
ãã 
;
ãã 
modelBuilder
çç 
.
çç 
Entity
çç 
<
çç  
Product
çç  '
>
çç' (
(
çç( )
entity
çç) /
=>
çç0 2
{
éé 
entity
èè 
.
èè 
ToTable
èè 
(
èè 
$str
èè (
,
èè( )
$str
èè* .
)
èè. /
;
èè/ 0
entity
ëë 
.
ëë 
HasIndex
ëë 
(
ëë  
e
ëë  !
=>
ëë" $
e
ëë% &
.
ëë& '
ProName
ëë' .
)
ëë. /
.
íí 
HasName
íí 
(
íí 
$str
íí <
)
íí< =
.
ìì 
IsUnique
ìì 
(
ìì 
)
ìì 
;
ìì  
entity
ïï 
.
ïï 
Property
ïï 
(
ïï  
e
ïï  !
=>
ïï" $
e
ïï% &
.
ïï& '
	ProductId
ïï' 0
)
ïï0 1
.
ïï1 2
HasColumnName
ïï2 ?
(
ïï? @
$str
ïï@ K
)
ïïK L
;
ïïL M
entity
óó 
.
óó 
Property
óó 
(
óó  
e
óó  !
=>
óó" $
e
óó% &
.
óó& '
ProCost
óó' .
)
óó. /
.
óó/ 0
HasColumnType
óó0 =
(
óó= >
$str
óó> M
)
óóM N
;
óóN O
entity
ôô 
.
ôô 
Property
ôô 
(
ôô  
e
ôô  !
=>
ôô" $
e
ôô% &
.
ôô& '
ProName
ôô' .
)
ôô. /
.
öö 

IsRequired
öö 
(
öö  
)
öö  !
.
õõ 
HasMaxLength
õõ !
(
õõ! "
$num
õõ" %
)
õõ% &
;
õõ& '
entity
ùù 
.
ùù 
Property
ùù 
(
ùù  
e
ùù  !
=>
ùù" $
e
ùù% &
.
ùù& '
ProType
ùù' .
)
ùù. /
.
ûû 

IsRequired
ûû 
(
ûû  
)
ûû  !
.
üü 
HasMaxLength
üü !
(
üü! "
$num
üü" $
)
üü$ %
;
üü% &
}
†† 
)
†† 
;
†† 
modelBuilder
¢¢ 
.
¢¢ 
Entity
¢¢ 
<
¢¢  
ResIng
¢¢  &
>
¢¢& '
(
¢¢' (
entity
¢¢( .
=>
¢¢/ 1
{
££ 
entity
§§ 
.
§§ 
ToTable
§§ 
(
§§ 
$str
§§ '
,
§§' (
$str
§§) -
)
§§- .
;
§§. /
entity
¶¶ 
.
¶¶ 
HasIndex
¶¶ 
(
¶¶  
e
¶¶  !
=>
¶¶" $
new
¶¶% (
{
¶¶) *
e
¶¶+ ,
.
¶¶, -
RestaurantId
¶¶- 9
,
¶¶9 :
e
¶¶; <
.
¶¶< =
IngredientId
¶¶= I
}
¶¶J K
)
¶¶K L
.
ßß 
HasName
ßß 
(
ßß 
$str
ßß (
)
ßß( )
.
®® 
IsUnique
®® 
(
®® 
)
®® 
;
®®  
entity
™™ 
.
™™ 
Property
™™ 
(
™™  
e
™™  !
=>
™™" $
e
™™% &
.
™™& '
ResIngId
™™' /
)
™™/ 0
.
™™0 1
HasColumnName
™™1 >
(
™™> ?
$str
™™? I
)
™™I J
;
™™J K
entity
¨¨ 
.
¨¨ 
Property
¨¨ 
(
¨¨  
e
¨¨  !
=>
¨¨" $
e
¨¨% &
.
¨¨& '
IngredientId
¨¨' 3
)
¨¨3 4
.
¨¨4 5
HasColumnName
¨¨5 B
(
¨¨B C
$str
¨¨C Q
)
¨¨Q R
;
¨¨R S
entity
ÆÆ 
.
ÆÆ 
Property
ÆÆ 
(
ÆÆ  
e
ÆÆ  !
=>
ÆÆ" $
e
ÆÆ% &
.
ÆÆ& '
Qty
ÆÆ' *
)
ÆÆ* +
.
ÆÆ+ ,
HasColumnType
ÆÆ, 9
(
ÆÆ9 :
$str
ÆÆ: I
)
ÆÆI J
;
ÆÆJ K
entity
∞∞ 
.
∞∞ 
Property
∞∞ 
(
∞∞  
e
∞∞  !
=>
∞∞" $
e
∞∞% &
.
∞∞& '
RestaurantId
∞∞' 3
)
∞∞3 4
.
∞∞4 5
HasColumnName
∞∞5 B
(
∞∞B C
$str
∞∞C Q
)
∞∞Q R
;
∞∞R S
entity
≤≤ 
.
≤≤ 
HasOne
≤≤ 
(
≤≤ 
d
≤≤ 
=>
≤≤  "
d
≤≤# $
.
≤≤$ %

Ingredient
≤≤% /
)
≤≤/ 0
.
≥≥ 
WithMany
≥≥ 
(
≥≥ 
p
≥≥ 
=>
≥≥  "
p
≥≥# $
.
≥≥$ %
ResIng
≥≥% +
)
≥≥+ ,
.
¥¥ 
HasForeignKey
¥¥ "
(
¥¥" #
d
¥¥# $
=>
¥¥% '
d
¥¥( )
.
¥¥) *
IngredientId
¥¥* 6
)
¥¥6 7
.
µµ 
HasConstraintName
µµ &
(
µµ& '
$str
µµ' 8
)
µµ8 9
;
µµ9 :
entity
∑∑ 
.
∑∑ 
HasOne
∑∑ 
(
∑∑ 
d
∑∑ 
=>
∑∑  "
d
∑∑# $
.
∑∑$ %

Restaurant
∑∑% /
)
∑∑/ 0
.
∏∏ 
WithMany
∏∏ 
(
∏∏ 
p
∏∏ 
=>
∏∏  "
p
∏∏# $
.
∏∏$ %
ResIng
∏∏% +
)
∏∏+ ,
.
ππ 
HasForeignKey
ππ "
(
ππ" #
d
ππ# $
=>
ππ% '
d
ππ( )
.
ππ) *
RestaurantId
ππ* 6
)
ππ6 7
.
∫∫ 
HasConstraintName
∫∫ &
(
∫∫& '
$str
∫∫' 8
)
∫∫8 9
;
∫∫9 :
}
ªª 
)
ªª 
;
ªª 
modelBuilder
ΩΩ 
.
ΩΩ 
Entity
ΩΩ 
<
ΩΩ  
ResPro
ΩΩ  &
>
ΩΩ& '
(
ΩΩ' (
entity
ΩΩ( .
=>
ΩΩ/ 1
{
ææ 
entity
øø 
.
øø 
ToTable
øø 
(
øø 
$str
øø '
,
øø' (
$str
øø) -
)
øø- .
;
øø. /
entity
¡¡ 
.
¡¡ 
Property
¡¡ 
(
¡¡  
e
¡¡  !
=>
¡¡" $
e
¡¡% &
.
¡¡& '
ResProId
¡¡' /
)
¡¡/ 0
.
¡¡0 1
HasColumnName
¡¡1 >
(
¡¡> ?
$str
¡¡? I
)
¡¡I J
;
¡¡J K
entity
√√ 
.
√√ 
Property
√√ 
(
√√  
e
√√  !
=>
√√" $
e
√√% &
.
√√& '
	ProductId
√√' 0
)
√√0 1
.
√√1 2
HasColumnName
√√2 ?
(
√√? @
$str
√√@ K
)
√√K L
;
√√L M
entity
≈≈ 
.
≈≈ 
Property
≈≈ 
(
≈≈  
e
≈≈  !
=>
≈≈" $
e
≈≈% &
.
≈≈& '
RestaurantId
≈≈' 3
)
≈≈3 4
.
≈≈4 5
HasColumnName
≈≈5 B
(
≈≈B C
$str
≈≈C Q
)
≈≈Q R
;
≈≈R S
entity
«« 
.
«« 
HasOne
«« 
(
«« 
d
«« 
=>
««  "
d
««# $
.
««$ %
Product
««% ,
)
««, -
.
»» 
WithMany
»» 
(
»» 
p
»» 
=>
»»  "
p
»»# $
.
»»$ %
ResPro
»»% +
)
»»+ ,
.
…… 
HasForeignKey
…… "
(
……" #
d
……# $
=>
……% '
d
……( )
.
……) *
	ProductId
……* 3
)
……3 4
.
   
HasConstraintName
   &
(
  & '
$str
  ' 2
)
  2 3
;
  3 4
entity
ÃÃ 
.
ÃÃ 
HasOne
ÃÃ 
(
ÃÃ 
d
ÃÃ 
=>
ÃÃ  "
d
ÃÃ# $
.
ÃÃ$ %

Restaurant
ÃÃ% /
)
ÃÃ/ 0
.
ÕÕ 
WithMany
ÕÕ 
(
ÕÕ 
p
ÕÕ 
=>
ÕÕ  "
p
ÕÕ# $
.
ÕÕ$ %
ResPro
ÕÕ% +
)
ÕÕ+ ,
.
ŒŒ 
HasForeignKey
ŒŒ "
(
ŒŒ" #
d
ŒŒ# $
=>
ŒŒ% '
d
ŒŒ( )
.
ŒŒ) *
RestaurantId
ŒŒ* 6
)
ŒŒ6 7
.
œœ 
HasConstraintName
œœ &
(
œœ& '
$str
œœ' 2
)
œœ2 3
;
œœ3 4
}
–– 
)
–– 
;
–– 
modelBuilder
““ 
.
““ 
Entity
““ 
<
““  

Restaurant
““  *
>
““* +
(
““+ ,
entity
““, 2
=>
““3 5
{
”” 
entity
‘‘ 
.
‘‘ 
ToTable
‘‘ 
(
‘‘ 
$str
‘‘ +
,
‘‘+ ,
$str
‘‘- 1
)
‘‘1 2
;
‘‘2 3
entity
÷÷ 
.
÷÷ 
HasIndex
÷÷ 
(
÷÷  
e
÷÷  !
=>
÷÷" $
e
÷÷% &
.
÷÷& '
RestLocation
÷÷' 3
)
÷÷3 4
.
◊◊ 
HasName
◊◊ 
(
◊◊ 
$str
◊◊ =
)
◊◊= >
.
ÿÿ 
IsUnique
ÿÿ 
(
ÿÿ 
)
ÿÿ 
;
ÿÿ  
entity
⁄⁄ 
.
⁄⁄ 
HasIndex
⁄⁄ 
(
⁄⁄  
e
⁄⁄  !
=>
⁄⁄" $
e
⁄⁄% &
.
⁄⁄& '
	RestPhone
⁄⁄' 0
)
⁄⁄0 1
.
€€ 
HasName
€€ 
(
€€ 
$str
€€ =
)
€€= >
.
‹‹ 
IsUnique
‹‹ 
(
‹‹ 
)
‹‹ 
;
‹‹  
entity
ﬁﬁ 
.
ﬁﬁ 
Property
ﬁﬁ 
(
ﬁﬁ  
e
ﬁﬁ  !
=>
ﬁﬁ" $
e
ﬁﬁ% &
.
ﬁﬁ& '
RestaurantId
ﬁﬁ' 3
)
ﬁﬁ3 4
.
ﬁﬁ4 5
HasColumnName
ﬁﬁ5 B
(
ﬁﬁB C
$str
ﬁﬁC Q
)
ﬁﬁQ R
;
ﬁﬁR S
entity
‡‡ 
.
‡‡ 
Property
‡‡ 
(
‡‡  
e
‡‡  !
=>
‡‡" $
e
‡‡% &
.
‡‡& '
RestLocation
‡‡' 3
)
‡‡3 4
.
·· 

IsRequired
·· 
(
··  
)
··  !
.
‚‚ 
HasMaxLength
‚‚ !
(
‚‚! "
$num
‚‚" %
)
‚‚% &
;
‚‚& '
entity
‰‰ 
.
‰‰ 
Property
‰‰ 
(
‰‰  
e
‰‰  !
=>
‰‰" $
e
‰‰% &
.
‰‰& '
	RestPhone
‰‰' 0
)
‰‰0 1
.
ÂÂ 

IsRequired
ÂÂ 
(
ÂÂ  
)
ÂÂ  !
.
ÊÊ 
HasMaxLength
ÊÊ !
(
ÊÊ! "
$num
ÊÊ" %
)
ÊÊ% &
;
ÊÊ& '
}
ÁÁ 
)
ÁÁ 
;
ÁÁ 
}
ËË 	
}
ÈÈ 
}ÍÍ Ø∂
^C:\revature\project0\daniel-project0\redrobin\RedRobin.DataAccess\Repositories\RedRobinRepo.cs
	namespace 	
RedRobin
 
. 
Library 
. 
Repositories '
{		 
public

 

class

 
RedRobinRepo

 
:

 
IRedRobinRepo

  -
{ 
private 
readonly 
RedRobinContext (
_db) ,
;, -
public 
RedRobinRepo 
( 
RedRobinContext +
db, .
). /
{ 	
_db 
= 
db 
?? 
throw 
new !!
ArgumentNullException" 7
(7 8
nameof8 >
(> ?
db? A
)A B
)B C
;C D
} 	
public 
IEnumerable 
< 
Models !
.! "

Restaurant" ,
>, -
GetAllRestaurants. ?
(? @
)@ A
{ 	
return 
Mapper 
. 
Map 
( 
_db !
.! "

Restaurant" ,
), -
;- .
} 	
public 
Models 
. 

Restaurant  
GetRestaurantById! 2
(2 3
int3 6
resID7 <
)< =
{ 	
return 
Mapper 
. 
Map 
( 
_db !
.! "

Restaurant" ,
., -
AsNoTracking- 9
(9 :
): ;
.; <
First< A
(A B
rB C
=>D F
rG H
.H I
RestaurantIdI U
==V X
resIDY ^
)^ _
)_ `
;` a
}   	
public"" 
void"" 
AddRestaurant"" !
(""! "
Models""" (
.""( )

Restaurant"") 3

restaurant""4 >
)""> ?
{## 	
_db(( 
.(( 
Add(( 
((( 
Mapper(( 
.(( 
Map(( 
((( 

restaurant(( )
)(() *
)((* +
;((+ ,
})) 	
public++ 
void++ 
UpdateRestaurant++ $
(++$ %
Models++% +
.+++ ,

Restaurant++, 6

restaurant++7 A
)++A B
{,, 	
_db// 
.// 
Entry// 
(// 
_db// 
.// 

Restaurant// $
.//$ %
Find//% )
(//) *

restaurant//* 4
.//4 5
Id//5 7
)//7 8
)//8 9
.//9 :
CurrentValues//: G
.//G H
	SetValues//H Q
(//Q R
Mapper//R X
.//X Y
Map//Y \
(//\ ]

restaurant//] g
)//g h
)//h i
;//i j
}00 	
public22 
void22 
DeleteRestaurant22 $
(22$ %
int22% (
restaurantId22) 5
)225 6
{33 	
_db44 
.44 
Remove44 
(44 
_db44 
.44 

Restaurant44 %
.44% &
Find44& *
(44* +
restaurantId44+ 7
)447 8
)448 9
;449 :
}55 	
public77 
void77 %
DeleteRestaurantInRestIng77 -
(77- .
int77. 1
restaurantId772 >
)77> ?
{88 	
_db99 
.99 
Remove99 
(99 
_db99 
.99 
ResIng99 !
.99! "
Find99" &
(99& '
restaurantId99' 3
)993 4
)994 5
;995 6
}:: 	
public<< 
void<< %
DeleteRestaurantInRestPro<< -
(<<- .
int<<. 1
restaurantId<<2 >
)<<> ?
{== 	
_db>> 
.>> 
Remove>> 
(>> 
_db>> 
.>> 
ResPro>> !
.>>! "
Find>>" &
(>>& '
restaurantId>>' 3
)>>3 4
)>>4 5
;>>5 6
}?? 	
publicAA 
voidAA $
DeleteRestaurantInOrdersAA ,
(AA, -
intAA- 0
restaurantIdAA1 =
)AA= >
{BB 	
_dbCC 
.CC 
RemoveCC 
(CC 
_dbCC 
.CC 
OrdersCC !
.CC! "
FindCC" &
(CC& '
restaurantIdCC' 3
)CC3 4
)CC4 5
;CC5 6
}DD 	
publicHH 
IEnumerableHH 
<HH 
ModelsHH !
.HH! "
	CustomersHH" +
>HH+ ,
GetCustomerHH- 8
(HH8 9
stringHH9 ?
custNameHH@ H
)HHH I
{II 	
returnJJ 
MapperJJ 
.JJ 
MapJJ 
(JJ 
fromJJ "
sJJ# $
inJJ% '
_dbJJ( +
.JJ+ ,
CustomerJJ, 4
whereKK #
sKK$ %
.KK% &
CustNameKK& .
==KK/ 1
custNameKK2 :
selectLL $
sLL% &
)LL& '
;LL' (
}MM 	
publicOO 
ModelsOO 
.OO 
	CustomersOO 
GetCustomerByIdOO  /
(OO/ 0
intOO0 3
custIDOO4 :
)OO: ;
{PP 	
returnRR 
MapperRR 
.RR 
MapRR 
(RR 
_dbRR !
.RR! "
CustomerRR" *
.RR* +
AsNoTrackingRR+ 7
(RR7 8
)RR8 9
.RR9 :
FirstRR: ?
(RR? @
rRR@ A
=>RRB D
rRRE F
.RRF G

CustomerIdRRG Q
==RRR T
custIDRRU [
)RR[ \
)RR\ ]
;RR] ^
}SS 	
publicUU 
ModelsUU 
.UU 
	CustomersUU 
GetLastCustUU  +
(UU+ ,
)UU, -
{VV 	
returnXX 
MapperXX 
.XX 
MapXX 
(XX 
_dbXX !
.XX! "
CustomerXX" *
.XX* +
LastXX+ /
(XX/ 0
)XX0 1
)XX1 2
;XX2 3
}YY 	
public[[ 
IEnumerable[[ 
<[[ 
Models[[ !
.[[! "
	Customers[[" +
>[[+ ,
GetCustomerByName[[- >
([[> ?
string[[? E
name[[F J
)[[J K
{\\ 	
return^^ 
Mapper^^ 
.^^ 
Map^^ 
(^^ 
from^^ "
s^^# $
in^^% '
_db^^( +
.^^+ ,
Customer^^, 4
where__ #
s__$ %
.__% &
CustName__& .
==__/ 1
name__2 6
select`` $
s``% &
)``& '
;``' (
}aa 	
publiccc 
voidcc 
AddCustomercc 
(cc  
Modelscc  &
.cc& '
	Customerscc' 0
customercc1 9
)cc9 :
{dd 	
_dbii 
.ii 
Addii 
(ii 
Mapperii 
.ii 
Mapii 
(ii 
customerii '
)ii' (
)ii( )
;ii) *
}jj 	
publicll 
IEnumerablell 
<ll 
Modelsll !
.ll! "
	Customersll" +
>ll+ ,!
GetOrdersfromCustomerll- B
(llB C
intllC F
orderIDllG N
)llN O
{mm 	
returnrr 
Mapperrr 
.rr 
Maprr 
(rr 
fromrr "
srr# $
inrr% '
_dbrr( +
.rr+ ,
Customerrr, 4
joinss "
sass# %
inss& (
_dbss) ,
.ss, -
Ordersss- 3
onss4 6
sss7 8
.ss8 9

CustomerIdss9 C
equalstt $
satt% '
.tt' (

CustomerIdtt( 2
whereuu #
sauu$ &
.uu& '
OrderIduu' .
==uu/ 1
orderIDuu2 9
selectvv $
svv% &
)vv& '
;vv' (
}ww 	
publicyy 
IEnumerableyy 
<yy 
Modelsyy !
.yy! "
	Customersyy" +
>yy+ ,
GetAllCustomersyy- <
(yy< =
)yy= >
{zz 	
return{{ 
Mapper{{ 
.{{ 
Map{{ 
({{ 
_db{{ !
.{{! "
Customer{{" *
){{* +
;{{+ ,
}|| 	
public
ÄÄ 
IEnumerable
ÄÄ 
<
ÄÄ 
Models
ÄÄ !
.
ÄÄ! "
RestIng
ÄÄ" )
>
ÄÄ) *!
GetAllIngredientsDB
ÄÄ+ >
(
ÄÄ> ?
int
ÄÄ? B
ResID
ÄÄC H
)
ÄÄH I
{
ÅÅ 	
return
ÇÇ 
Mapper
ÇÇ 
.
ÇÇ 
Map
ÇÇ 
(
ÇÇ 
from
ÇÇ "
s
ÇÇ# $
in
ÇÇ% '
_db
ÇÇ( +
.
ÇÇ+ ,
ResIng
ÇÇ, 2
join
ÉÉ "
sa
ÉÉ# %
in
ÉÉ& (
_db
ÉÉ) ,
.
ÉÉ, -
Ingredients
ÉÉ- 8
on
ÉÉ9 ;
s
ÉÉ< =
.
ÉÉ= >
IngredientId
ÉÉ> J
equals
ÑÑ $
sa
ÑÑ% '
.
ÑÑ' (
IngredientId
ÑÑ( 4
where
ÖÖ #
s
ÖÖ$ %
.
ÖÖ% &
RestaurantId
ÖÖ& 2
==
ÖÖ3 5
ResID
ÖÖ6 ;
select
ÜÜ $
s
ÜÜ% &
)
ÜÜ& '
;
ÜÜ' (
}
áá 	
public
ââ 
IEnumerable
ââ 
<
ââ 
Models
ââ !
.
ââ! ""
IngredientsInventory
ââ" 6
>
ââ6 7
GetAllIngredients
ââ8 I
(
ââI J
int
ââJ M
ingID
ââN S
)
ââS T
{
ää 	
return
ãã 
Mapper
ãã 
.
ãã 
Map
ãã 
(
ãã 
from
ãã "
s
ãã# $
in
ãã% '
_db
ãã( +
.
ãã+ ,
Ingredients
ãã, 7
where
åå #
s
åå$ %
.
åå% &
IngredientId
åå& 2
==
åå3 5
ingID
åå6 ;
select
çç $
s
çç% &
)
çç& '
;
çç' (
}
éé 	
public
êê 
void
êê 
AddIngredient
êê !
(
êê! "
Models
êê" (
.
êê( )"
IngredientsInventory
êê) =

ingredient
êê> H
)
êêH I
{
ëë 	
_db
ññ 
.
ññ 
Add
ññ 
(
ññ 
Mapper
ññ 
.
ññ 
Map
ññ 
(
ññ 

ingredient
ññ )
)
ññ) *
)
ññ* +
;
ññ+ ,
}
óó 	
public
õõ 
IEnumerable
õõ 
<
õõ 
Models
õõ !
.
õõ! "
RestIng
õõ" )
>
õõ) *(
GetAllRestautantIngredient
õõ+ E
(
õõE F
int
õõF I
resID
õõJ O
,
õõO P
int
õõQ T
IngID
õõU Z
)
õõZ [
{
úú 	
return
ûû 
Mapper
ûû 
.
ûû 
Map
ûû 
(
ûû 
from
ûû "
s
ûû# $
in
ûû% '
_db
ûû( +
.
ûû+ ,
ResIng
ûû, 2
join
üü "
sa
üü# %
in
üü& (
_db
üü) ,
.
üü, -
Ingredients
üü- 8
on
üü9 ;
s
üü< =
.
üü= >
IngredientId
üü> J
equals
†† $
sa
††% '
.
††' (
IngredientId
††( 4
where
°° #
s
°°$ %
.
°°% &
RestaurantId
°°& 2
==
°°3 5
resID
°°6 ;
&&
°°< >
s
°°? @
.
°°@ A
IngredientId
°°A M
==
°°N P
IngID
°°Q V
select
¢¢ $
s
¢¢% &
)
¢¢& '
;
¢¢' (
}
££ 	
public
•• 
IEnumerable
•• 
<
•• 
Models
•• !
.
••! "
RestIng
••" )
>
••) *.
 GetAllRestautantIngredientToSubs
••+ K
(
••K L
int
••L O
resID
••P U
)
••U V
{
¶¶ 	
return
®® 
Mapper
®® 
.
®® 
Map
®® 
(
®® 
from
®® "
s
®®# $
in
®®% '
_db
®®( +
.
®®+ ,
ResIng
®®, 2
where
©© #
s
©©$ %
.
©©% &
RestaurantId
©©& 2
==
©©3 5
resID
©©6 ;
select
™™ $
s
™™% &
)
™™& '
;
™™' (
}
´´ 	
public
≠≠ 
IEnumerable
≠≠ 
<
≠≠ 
Models
≠≠ !
.
≠≠! ""
IngredientsInventory
≠≠" 6
>
≠≠6 7%
GetRestautantIngredient
≠≠8 O
(
≠≠O P
int
≠≠P S
resID
≠≠T Y
)
≠≠Y Z
{
ÆÆ 	
return
∞∞ 
Mapper
∞∞ 
.
∞∞ 
Map
∞∞ 
(
∞∞ 
from
∞∞ "
s
∞∞# $
in
∞∞% '
_db
∞∞( +
.
∞∞+ ,
Ingredients
∞∞, 7
join
±± "
sa
±±# %
in
±±& (
_db
±±) ,
.
±±, -
ResIng
±±- 3
on
±±4 6
s
±±7 8
.
±±8 9
IngredientId
±±9 E
equals
≤≤ $
sa
≤≤% '
.
≤≤' (
IngredientId
≤≤( 4
where
≥≥ #
sa
≥≥$ &
.
≥≥& '
RestaurantId
≥≥' 3
==
≥≥4 6
resID
≥≥7 <
select
¥¥ $
s
¥¥% &
)
¥¥& '
;
¥¥' (
}
µµ 	
public
∑∑ 
Models
∑∑ 
.
∑∑ "
IngredientsInventory
∑∑ *
GetIngredientById
∑∑+ <
(
∑∑< =
int
∑∑= @
ingID
∑∑A F
)
∑∑F G
{
∏∏ 	
return
∫∫ 
Mapper
∫∫ 
.
∫∫ 
Map
∫∫ 
(
∫∫ 
_db
∫∫ !
.
∫∫! "
Ingredients
∫∫" -
.
∫∫- .
AsNoTracking
∫∫. :
(
∫∫: ;
)
∫∫; <
.
∫∫< =
First
∫∫= B
(
∫∫B C
r
∫∫C D
=>
∫∫E G
r
∫∫H I
.
∫∫I J
IngredientId
∫∫J V
==
∫∫W Y
ingID
∫∫Z _
)
∫∫_ `
)
∫∫` a
;
∫∫a b
}
ªª 	
public
ΩΩ 
Models
ΩΩ 
.
ΩΩ 
RestIng
ΩΩ %
GetIngredientByIdIngRes
ΩΩ 5
(
ΩΩ5 6
int
ΩΩ6 9
ingID
ΩΩ: ?
)
ΩΩ? @
{
ææ 	
return
¿¿ 
Mapper
¿¿ 
.
¿¿ 
Map
¿¿ 
(
¿¿ 
_db
¿¿ !
.
¿¿! "
ResIng
¿¿" (
.
¿¿( )
AsNoTracking
¿¿) 5
(
¿¿5 6
)
¿¿6 7
.
¿¿7 8
First
¿¿8 =
(
¿¿= >
r
¿¿> ?
=>
¿¿@ B
r
¿¿C D
.
¿¿D E
IngredientId
¿¿E Q
==
¿¿R T
ingID
¿¿U Z
)
¿¿Z [
)
¿¿[ \
;
¿¿\ ]
}
¡¡ 	
public
√√ 
void
√√ %
AddRestaurantIngredient
√√ +
(
√√+ ,
Models
√√, 2
.
√√2 3
RestIng
√√3 :
restIng
√√; B
)
√√B C
{
ƒƒ 	
_db
…… 
.
…… 
Add
…… 
(
…… 
Mapper
…… 
.
…… 
Map
…… 
(
…… 
restIng
…… &
)
……& '
)
……' (
;
……( )
}
   	
public
ÃÃ 
void
ÃÃ (
UpdateRestaurantIngredient
ÃÃ .
(
ÃÃ. /
Models
ÃÃ/ 5
.
ÃÃ5 6
RestIng
ÃÃ6 =
restIng
ÃÃ> E
)
ÃÃE F
{
ÕÕ 	
_db
–– 
.
–– 
Entry
–– 
(
–– 
_db
–– 
.
–– 
ResIng
––  
.
––  !
Find
––! %
(
––% &
restIng
––& -
.
––- .
resIngID
––. 6
)
––6 7
)
––7 8
.
––8 9
CurrentValues
––9 F
.
––F G
	SetValues
––G P
(
––P Q
Mapper
––Q W
.
––W X
Map
––X [
(
––[ \
restIng
––\ c
)
––c d
)
––d e
;
––e f
}
—— 	
public
’’ 
void
’’ 
UpdateProduct
’’ !
(
’’! "
Models
’’" (
.
’’( )
Products
’’) 1
product
’’2 9
)
’’9 :
{
÷÷ 	
_db
ŸŸ 
.
ŸŸ 
Entry
ŸŸ 
(
ŸŸ 
_db
ŸŸ 
.
ŸŸ 
Product
ŸŸ !
.
ŸŸ! "
Find
ŸŸ" &
(
ŸŸ& '
product
ŸŸ' .
.
ŸŸ. /
Id
ŸŸ/ 1
)
ŸŸ1 2
)
ŸŸ2 3
.
ŸŸ3 4
CurrentValues
ŸŸ4 A
.
ŸŸA B
	SetValues
ŸŸB K
(
ŸŸK L
Mapper
ŸŸL R
.
ŸŸR S
Map
ŸŸS V
(
ŸŸV W
product
ŸŸW ^
)
ŸŸ^ _
)
ŸŸ_ `
;
ŸŸ` a
}
⁄⁄ 	
public
‹‹ 
IEnumerable
‹‹ 
<
‹‹ 
Models
‹‹ !
.
‹‹! "
Products
‹‹" *
>
‹‹* +
GetAllProducts
‹‹, :
(
‹‹: ;
int
‹‹; >
restID
‹‹? E
)
‹‹E F
{
›› 	
return
ﬁﬁ 
Mapper
ﬁﬁ 
.
ﬁﬁ 
Map
ﬁﬁ 
(
ﬁﬁ 
from
ﬁﬁ "
s
ﬁﬁ# $
in
ﬁﬁ% '
_db
ﬁﬁ( +
.
ﬁﬁ+ ,
Product
ﬁﬁ, 3
join
ﬂﬂ "
sa
ﬂﬂ# %
in
ﬂﬂ& (
_db
ﬂﬂ) ,
.
ﬂﬂ, -
ResPro
ﬂﬂ- 3
on
ﬂﬂ4 6
s
ﬂﬂ7 8
.
ﬂﬂ8 9
	ProductId
ﬂﬂ9 B
equals
‡‡ $
sa
‡‡% '
.
‡‡' (
	ProductId
‡‡( 1
where
·· #
sa
··$ &
.
··& '
RestaurantId
··' 3
==
··4 6
restID
··7 =
select
‚‚ $
s
‚‚% &
)
‚‚& '
;
‚‚' (
}
„„ 	
public
ÂÂ 
Models
ÂÂ 
.
ÂÂ 
Products
ÂÂ 
GetProductById
ÂÂ -
(
ÂÂ- .
int
ÂÂ. 1
proID
ÂÂ2 7
)
ÂÂ7 8
{
ÊÊ 	
return
ËË 
Mapper
ËË 
.
ËË 
Map
ËË 
(
ËË 
_db
ËË !
.
ËË! "
Product
ËË" )
.
ËË) *
AsNoTracking
ËË* 6
(
ËË6 7
)
ËË7 8
.
ËË8 9
First
ËË9 >
(
ËË> ?
r
ËË? @
=>
ËËA C
r
ËËD E
.
ËËE F
	ProductId
ËËF O
==
ËËP R
proID
ËËS X
)
ËËX Y
)
ËËY Z
;
ËËZ [
}
ÈÈ 	
public
ÎÎ 
IEnumerable
ÎÎ 
<
ÎÎ 
Models
ÎÎ !
.
ÎÎ! "
ResPro
ÎÎ" (
>
ÎÎ( )
GetAllProductsDB
ÎÎ* :
(
ÎÎ: ;
int
ÎÎ; >
ResID
ÎÎ? D
)
ÎÎD E
{
ÏÏ 	
return
ÌÌ 
Mapper
ÌÌ 
.
ÌÌ 
Map
ÌÌ 
(
ÌÌ 
from
ÌÌ "
s
ÌÌ# $
in
ÌÌ% '
_db
ÌÌ( +
.
ÌÌ+ ,
ResPro
ÌÌ, 2
join
ÓÓ "
sa
ÓÓ# %
in
ÓÓ& (
_db
ÓÓ) ,
.
ÓÓ, -
Product
ÓÓ- 4
on
ÓÓ5 7
s
ÓÓ8 9
.
ÓÓ9 :
	ProductId
ÓÓ: C
equals
ÔÔ $
sa
ÔÔ% '
.
ÔÔ' (
	ProductId
ÔÔ( 1
where
 #
s
$ %
.
% &
RestaurantId
& 2
==
3 5
ResID
6 ;
select
ÒÒ $
s
ÒÒ% &
)
ÒÒ& '
;
ÒÒ' (
}
ÚÚ 	
public
ÙÙ 
void
ÙÙ 

AddProduct
ÙÙ 
(
ÙÙ 
Models
ÙÙ %
.
ÙÙ% &
Products
ÙÙ& .
product
ÙÙ/ 6
)
ÙÙ6 7
{
ıı 	
_db
˙˙ 
.
˙˙ 
Add
˙˙ 
(
˙˙ 
Mapper
˙˙ 
.
˙˙ 
Map
˙˙ 
(
˙˙ 
product
˙˙ &
)
˙˙& '
)
˙˙' (
;
˙˙( )
}
˚˚ 	
public
˝˝ 
IEnumerable
˝˝ 
<
˝˝ 
Models
˝˝ !
.
˝˝! "
Products
˝˝" *
>
˝˝* +
GetAllProductsDB
˝˝, <
(
˝˝< =
)
˝˝= >
{
˛˛ 	
return
ÄÄ 
Mapper
ÄÄ 
.
ÄÄ 
Map
ÄÄ 
(
ÄÄ 
_db
ÄÄ !
.
ÄÄ! "
Product
ÄÄ" )
)
ÄÄ) *
;
ÄÄ* +
}
ÅÅ 	
public
ÉÉ 
IEnumerable
ÉÉ 
<
ÉÉ 
Models
ÉÉ !
.
ÉÉ! "
Products
ÉÉ" *
>
ÉÉ* +

GetLastPro
ÉÉ, 6
(
ÉÉ6 7
)
ÉÉ7 8
{
ÑÑ 	
return
ÜÜ 
Mapper
ÜÜ 
.
ÜÜ 
Map
ÜÜ 
(
ÜÜ 
from
ÜÜ "
s
ÜÜ# $
in
ÜÜ% '
_db
ÜÜ( +
.
ÜÜ+ ,
Product
ÜÜ, 3
select
áá $
s
áá% &
)
áá& '
;
áá' (
}
àà 	
public
åå 
IEnumerable
åå 
<
åå 
Models
åå !
.
åå! ""
IngredientsInventory
åå" 6
>
åå6 7&
GetAllIngredientProducts
åå8 P
(
ååP Q
int
ååQ T
proID
ååU Z
)
ååZ [
{
çç 	
return
èè 
Mapper
èè 
.
èè 
Map
èè 
(
èè 
from
èè "
s
èè# $
in
èè% '
_db
èè( +
.
èè+ ,
Ingredients
èè, 7
join
êê "
sa
êê# %
in
êê& (
_db
êê) ,
.
êê, -
IngPro
êê- 3
on
êê4 6
s
êê7 8
.
êê8 9
IngredientId
êê9 E
equals
ëë $
sa
ëë% '
.
ëë' (
IngredientId
ëë( 4
where
íí #
sa
íí$ &
.
íí& '
	ProductId
íí' 0
==
íí1 3
proID
íí4 9
select
ìì $
s
ìì% &
)
ìì& '
;
ìì' (
}
îî 	
public
ññ 
IEnumerable
ññ 
<
ññ 
Models
ññ !
.
ññ! ""
IngredientsInventory
ññ" 6
>
ññ6 7

GetLastIng
ññ8 B
(
ññB C
)
ññC D
{
óó 	
return
ôô 
Mapper
ôô 
.
ôô 
Map
ôô 
(
ôô 
from
ôô "
s
ôô# $
in
ôô% '
_db
ôô( +
.
ôô+ ,
Ingredients
ôô, 7
select
öö $
s
öö% &
)
öö& '
;
öö' (
}
õõ 	
public
ùù 
IEnumerable
ùù 
<
ùù 
Models
ùù !
.
ùù! "
IngPro
ùù" (
>
ùù( ),
GetAllIngredientProductsToSubs
ùù* H
(
ùùH I
int
ùùI L
proID
ùùM R
)
ùùR S
{
ûû 	
return
†† 
Mapper
†† 
.
†† 
Map
†† 
(
†† 
from
†† "
s
††# $
in
††% '
_db
††( +
.
††+ ,
IngPro
††, 2
where
°° #
s
°°$ %
.
°°% &
	ProductId
°°& /
==
°°0 2
proID
°°3 8
select
¢¢ $
s
¢¢% &
)
¢¢& '
;
¢¢' (
}
££ 	
public
•• 
void
•• "
AddIngredientProduct
•• (
(
••( )
Models
••) /
.
••/ 0
IngPro
••0 6
ingPro
••7 =
)
••= >
{
¶¶ 	
_db
´´ 
.
´´ 
Add
´´ 
(
´´ 
Mapper
´´ 
.
´´ 
Map
´´ 
(
´´ 
ingPro
´´ %
)
´´% &
)
´´& '
;
´´' (
}
¨¨ 	
public
ÆÆ 
void
ÆÆ %
UpdateIngredientProduct
ÆÆ +
(
ÆÆ+ ,
Models
ÆÆ, 2
.
ÆÆ2 3
IngPro
ÆÆ3 9
ingPro
ÆÆ: @
)
ÆÆ@ A
{
ØØ 	
_db
≤≤ 
.
≤≤ 
Entry
≤≤ 
(
≤≤ 
_db
≤≤ 
.
≤≤ 
ResIng
≤≤  
.
≤≤  !
Find
≤≤! %
(
≤≤% &
ingPro
≤≤& ,
.
≤≤, -
ingProID
≤≤- 5
)
≤≤5 6
)
≤≤6 7
.
≤≤7 8
CurrentValues
≤≤8 E
.
≤≤E F
	SetValues
≤≤F O
(
≤≤O P
Mapper
≤≤P V
.
≤≤V W
Map
≤≤W Z
(
≤≤Z [
ingPro
≤≤[ a
)
≤≤a b
)
≤≤b c
;
≤≤c d
}
≥≥ 	
public
∑∑ 
void
∑∑ "
AddRestaurantProduct
∑∑ (
(
∑∑( )
Models
∑∑) /
.
∑∑/ 0
ResPro
∑∑0 6
resPro
∑∑7 =
)
∑∑= >
{
∏∏ 	
_db
ΩΩ 
.
ΩΩ 
Add
ΩΩ 
(
ΩΩ 
Mapper
ΩΩ 
.
ΩΩ 
Map
ΩΩ 
(
ΩΩ 
resPro
ΩΩ %
)
ΩΩ% &
)
ΩΩ& '
;
ΩΩ' (
}
ææ 	
public
¬¬ 
void
¬¬ 
	AddOrders
¬¬ 
(
¬¬ 
Models
¬¬ $
.
¬¬$ %
Orders
¬¬% +
orders
¬¬, 2
)
¬¬2 3
{
√√ 	
_db
»» 
.
»» 
Add
»» 
(
»» 
Mapper
»» 
.
»» 
Map
»» 
(
»» 
orders
»» %
)
»»% &
)
»»& '
;
»»' (
}
…… 	
public
ÀÀ 
IEnumerable
ÀÀ 
<
ÀÀ 
Models
ÀÀ !
.
ÀÀ! "
Orders
ÀÀ" (
>
ÀÀ( )

GetLastOrd
ÀÀ* 4
(
ÀÀ4 5
)
ÀÀ5 6
{
ÃÃ 	
return
ŒŒ 
Mapper
ŒŒ 
.
ŒŒ 
Map
ŒŒ 
(
ŒŒ 
from
ŒŒ "
s
ŒŒ# $
in
ŒŒ% '
_db
ŒŒ( +
.
ŒŒ+ ,
Orders
ŒŒ, 2
select
œœ $
s
œœ% &
)
œœ& '
;
œœ' (
}
–– 	
public
““ 
IEnumerable
““ 
<
““ 
Models
““ !
.
““! "
Orders
““" (
>
““( )%
GetOrdersfromRestaurant
““* A
(
““A B
int
““B E
restID
““F L
)
““L M
{
”” 	
return
ÿÿ 
Mapper
ÿÿ 
.
ÿÿ 
Map
ÿÿ 
(
ÿÿ 
_db
ÿÿ !
.
ÿÿ! "
Orders
ÿÿ" (
.
ÿÿ( )
OrderByDescending
ÿÿ) :
(
ÿÿ: ;
r
ÿÿ; <
=>
ÿÿ< >
r
ÿÿ> ?
.
ÿÿ? @
RestaurantId
ÿÿ@ L
==
ÿÿL N
restID
ÿÿN T
)
ÿÿT U
)
ÿÿU V
;
ÿÿV W
}
ŸŸ 	
public
€€ 
IEnumerable
€€ 
<
€€ 
Models
€€ !
.
€€! "
Orders
€€" (
>
€€( )-
GetOrdersfromRestaurantCheapest
€€* I
(
€€I J
int
€€J M
restID
€€N T
)
€€T U
{
‹‹ 	
return
·· 
Mapper
·· 
.
·· 
Map
·· 
(
·· 
_db
·· !
.
··! "
Orders
··" (
.
··( )
OrderBy
··) 0
(
··0 1
r
··1 2
=>
··3 5
r
··6 7
.
··7 8
OrdCost
··8 ?
)
··? @
.
··@ A
Where
··A F
(
··F G
t
··G H
=>
··I K
t
··L M
.
··M N
RestaurantId
··N Z
==
··[ ]
restID
··^ d
)
··d e
)
··e f
;
··f g
}
‚‚ 	
public
‰‰ 
IEnumerable
‰‰ 
<
‰‰ 
Models
‰‰ !
.
‰‰! "
Orders
‰‰" (
>
‰‰( ).
 GetOrdersfromRestaurantExpensive
‰‰* J
(
‰‰J K
int
‰‰K N
restID
‰‰O U
)
‰‰U V
{
ÂÂ 	
return
ÍÍ 
Mapper
ÍÍ 
.
ÍÍ 
Map
ÍÍ 
(
ÍÍ 
_db
ÍÍ !
.
ÍÍ! "
Orders
ÍÍ" (
.
ÍÍ( )
OrderByDescending
ÍÍ) :
(
ÍÍ: ;
r
ÍÍ; <
=>
ÍÍ= ?
r
ÍÍ@ A
.
ÍÍA B
OrdCost
ÍÍB I
)
ÍÍI J
.
ÍÍJ K
Where
ÍÍK P
(
ÍÍP Q
t
ÍÍQ R
=>
ÍÍS U
t
ÍÍV W
.
ÍÍW X
RestaurantId
ÍÍX d
==
ÍÍe g
restID
ÍÍh n
)
ÍÍn o
)
ÍÍo p
;
ÍÍp q
}
ÎÎ 	
public
ÌÌ 
IEnumerable
ÌÌ 
<
ÌÌ 
Models
ÌÌ !
.
ÌÌ! "
Orders
ÌÌ" (
>
ÌÌ( )-
GetOrdersfromRestaurantEarliest
ÌÌ* I
(
ÌÌI J
int
ÌÌJ M
restID
ÌÌN T
)
ÌÌT U
{
ÓÓ 	
return
ÛÛ 
Mapper
ÛÛ 
.
ÛÛ 
Map
ÛÛ 
(
ÛÛ 
_db
ÛÛ !
.
ÛÛ! "
Orders
ÛÛ" (
.
ÛÛ( )
OrderBy
ÛÛ) 0
(
ÛÛ0 1
r
ÛÛ1 2
=>
ÛÛ3 5
r
ÛÛ6 7
.
ÛÛ7 8
OrdDate
ÛÛ8 ?
)
ÛÛ? @
.
ÛÛ@ A
Where
ÛÛA F
(
ÛÛF G
t
ÛÛG H
=>
ÛÛI K
t
ÛÛL M
.
ÛÛM N
RestaurantId
ÛÛN Z
==
ÛÛ[ ]
restID
ÛÛ^ d
)
ÛÛd e
)
ÛÛe f
;
ÛÛf g
}
ÙÙ 	
public
ˆˆ 
IEnumerable
ˆˆ 
<
ˆˆ 
Models
ˆˆ !
.
ˆˆ! "
Orders
ˆˆ" (
>
ˆˆ( )+
GetOrdersfromRestaurantLatest
ˆˆ* G
(
ˆˆG H
int
ˆˆH K
restID
ˆˆL R
)
ˆˆR S
{
˜˜ 	
return
¸¸ 
Mapper
¸¸ 
.
¸¸ 
Map
¸¸ 
(
¸¸ 
_db
¸¸ !
.
¸¸! "
Orders
¸¸" (
.
¸¸( )
OrderByDescending
¸¸) :
(
¸¸: ;
r
¸¸; <
=>
¸¸= ?
r
¸¸@ A
.
¸¸A B
OrdDate
¸¸B I
)
¸¸I J
.
¸¸J K
Where
¸¸K P
(
¸¸P Q
t
¸¸Q R
=>
¸¸S U
t
¸¸V W
.
¸¸W X
RestaurantId
¸¸X d
==
¸¸e g
restID
¸¸h n
)
¸¸n o
)
¸¸o p
;
¸¸p q
}
˝˝ 	
public
ˇˇ 
IEnumerable
ˇˇ 
<
ˇˇ 
Models
ˇˇ !
.
ˇˇ! "
Orders
ˇˇ" (
>
ˇˇ( )!
GetOrdersRevenueDay
ˇˇ* =
(
ˇˇ= >
int
ˇˇ> A
restID
ˇˇB H
,
ˇˇH I
DateTime
ˇˇJ R
date
ˇˇS W
)
ˇˇW X
{
ÄÄ 	
return
ÖÖ 
Mapper
ÖÖ 
.
ÖÖ 
Map
ÖÖ 
(
ÖÖ 
from
ÖÖ "
s
ÖÖ# $
in
ÖÖ% '
_db
ÖÖ( +
.
ÖÖ+ ,
Orders
ÖÖ, 2
where
ÜÜ #
s
ÜÜ$ %
.
ÜÜ% &
RestaurantId
ÜÜ& 2
==
ÜÜ3 5
restID
ÜÜ6 <
&&
áá  
s
áá! "
.
áá" #
OrdDate
áá# *
.
áá* +
Year
áá+ /
.
áá/ 0
Equals
áá0 6
(
áá6 7
date
áá7 ;
.
áá; <
Year
áá< @
)
áá@ A
&&
àà  
s
àà! "
.
àà" #
OrdDate
àà# *
.
àà* +
Month
àà+ 0
.
àà0 1
Equals
àà1 7
(
àà7 8
date
àà8 <
.
àà< =
Month
àà= B
)
ààB C
&&
ââ  
s
ââ! "
.
ââ" #
OrdDate
ââ# *
.
ââ* +
Day
ââ+ .
.
ââ. /
Equals
ââ/ 5
(
ââ5 6
date
ââ6 :
.
ââ: ;
Day
ââ; >
)
ââ> ?
select
ää $
s
ää% &
)
ää& '
;
ää' (
}
ãã 	
public
çç 
IEnumerable
çç 
<
çç 
Models
çç !
.
çç! "
Orders
çç" (
>
çç( )#
GetOrdersRevenueMonth
çç* ?
(
çç? @
int
çç@ C
restID
ççD J
,
ççJ K
DateTime
ççL T
date
ççU Y
)
ççY Z
{
éé 	
return
ìì 
Mapper
ìì 
.
ìì 
Map
ìì 
(
ìì 
from
ìì "
s
ìì# $
in
ìì% '
_db
ìì( +
.
ìì+ ,
Orders
ìì, 2
where
îî #
s
îî$ %
.
îî% &
RestaurantId
îî& 2
==
îî3 5
restID
îî6 <
&&
ïï  
s
ïï! "
.
ïï" #
OrdDate
ïï# *
.
ïï* +
Year
ïï+ /
.
ïï/ 0
Equals
ïï0 6
(
ïï6 7
date
ïï7 ;
.
ïï; <
Year
ïï< @
)
ïï@ A
&&
ññ  
s
ññ! "
.
ññ" #
OrdDate
ññ# *
.
ññ* +
Month
ññ+ 0
.
ññ0 1
Equals
ññ1 7
(
ññ7 8
date
ññ8 <
.
ññ< =
Month
ññ= B
)
ññB C
select
óó $
s
óó% &
)
óó& '
;
óó' (
}
òò 	
public
öö 
IEnumerable
öö 
<
öö 
Models
öö !
.
öö! "
Orders
öö" (
>
öö( )"
GetOrdersRevenueYear
öö* >
(
öö> ?
int
öö? B
restID
ööC I
,
ööI J
DateTime
ööK S
date
ööT X
)
ööX Y
{
õõ 	
return
†† 
Mapper
†† 
.
†† 
Map
†† 
(
†† 
from
†† "
s
††# $
in
††% '
_db
††( +
.
††+ ,
Orders
††, 2
where
°° #
s
°°$ %
.
°°% &
RestaurantId
°°& 2
==
°°3 5
restID
°°6 <
&&
¢¢  
s
¢¢! "
.
¢¢" #
OrdDate
¢¢# *
.
¢¢* +
Year
¢¢+ /
.
¢¢/ 0
Equals
¢¢0 6
(
¢¢6 7
date
¢¢7 ;
.
¢¢; <
Year
¢¢< @
)
¢¢@ A
select
££ $
s
££% &
)
££& '
;
££' (
}
§§ 	
public
¶¶ 
IEnumerable
¶¶ 
<
¶¶ 
Models
¶¶ !
.
¶¶! "
Orders
¶¶" (
>
¶¶( )
GetOrdersCustomer
¶¶* ;
(
¶¶; <
int
¶¶< ?
custID
¶¶@ F
)
¶¶F G
{
ßß 	
return
¨¨ 
Mapper
¨¨ 
.
¨¨ 
Map
¨¨ 
(
¨¨ 
from
¨¨ "
s
¨¨# $
in
¨¨% '
_db
¨¨( +
.
¨¨+ ,
Orders
¨¨, 2
where
≠≠ #
s
≠≠$ %
.
≠≠% &

CustomerId
≠≠& 0
==
≠≠1 3
custID
≠≠4 :
select
ÆÆ $
s
ÆÆ% &
)
ÆÆ& '
;
ÆÆ' (
}
ØØ 	
public
±± 
IEnumerable
±± 
<
±± 
Models
±± !
.
±±! "
Orders
±±" (
>
±±( )
GetAllOrdersDB
±±* 8
(
±±8 9
)
±±9 :
{
≤≤ 	
return
≥≥ 
Mapper
≥≥ 
.
≥≥ 
Map
≥≥ 
(
≥≥ 
_db
≥≥ !
.
≥≥! "
Orders
≥≥" (
)
≥≥( )
;
≥≥) *
}
¥¥ 	
public
∂∂ 
void
∂∂ 
UpdateOrder
∂∂ 
(
∂∂  
Models
∂∂  &
.
∂∂& '
Orders
∂∂' -
order
∂∂. 3
)
∂∂3 4
{
∑∑ 	
_db
∫∫ 
.
∫∫ 
Entry
∫∫ 
(
∫∫ 
_db
∫∫ 
.
∫∫ 
Orders
∫∫  
.
∫∫  !
Find
∫∫! %
(
∫∫% &
order
∫∫& +
.
∫∫+ ,
Id
∫∫, .
)
∫∫. /
)
∫∫/ 0
.
∫∫0 1
CurrentValues
∫∫1 >
.
∫∫> ?
	SetValues
∫∫? H
(
∫∫H I
Mapper
∫∫I O
.
∫∫O P
Map
∫∫P S
(
∫∫S T
order
∫∫T Y
)
∫∫Y Z
)
∫∫Z [
;
∫∫[ \
}
ªª 	
public
ºº 
Models
ºº 
.
ºº 
Orders
ºº 
GetOrdersById
ºº *
(
ºº* +
int
ºº+ .
ordID
ºº/ 4
)
ºº4 5
{
ΩΩ 	
return
øø 
Mapper
øø 
.
øø 
Map
øø 
(
øø 
_db
øø !
.
øø! "
Orders
øø" (
.
øø( )
AsNoTracking
øø) 5
(
øø5 6
)
øø6 7
.
øø7 8
First
øø8 =
(
øø= >
r
øø> ?
=>
øø@ B
r
øøC D
.
øøD E
OrderId
øøE L
==
øøM O
ordID
øøP U
)
øøU V
)
øøV W
;
øøW X
}
¿¿ 	
public
¬¬ 
IEnumerable
¬¬ 
<
¬¬ 
Models
¬¬ !
.
¬¬! "
Products
¬¬" *
>
¬¬* +
GetProductRevenue
¬¬, =
(
¬¬= >
int
¬¬> A
proID
¬¬B G
)
¬¬G H
{
√√ 	
return
»» 
Mapper
»» 
.
»» 
Map
»» 
(
»» 
from
»» "
s
»»# $
in
»»% '
_db
»»( +
.
»»+ ,
Product
»», 3
join
…… "
sa
……# %
in
……& (
_db
……) ,
.
……, -
OrderProduct
……- 9
on
……: <
s
……= >
.
……> ?
	ProductId
……? H
equals
   $
sa
  % '
.
  ' (
	ProductId
  ( 1
where
ÀÀ #
sa
ÀÀ$ &
.
ÀÀ& '
	ProductId
ÀÀ' 0
==
ÀÀ1 3
proID
ÀÀ4 9
select
ÃÃ $
s
ÃÃ% &
)
ÃÃ& '
;
ÃÃ' (
}
ÕÕ 	
public
““ 
void
““ 
AddOrderProduct
““ #
(
““# $
Models
““$ *
.
““* +
OrdPro
““+ 1
ordPro
““2 8
)
““8 9
{
”” 	
_db
ÿÿ 
.
ÿÿ 
Add
ÿÿ 
(
ÿÿ 
Mapper
ÿÿ 
.
ÿÿ 
Map
ÿÿ 
(
ÿÿ 
ordPro
ÿÿ %
)
ÿÿ% &
)
ÿÿ& '
;
ÿÿ' (
}
ŸŸ 	
public
€€ 
IEnumerable
€€ 
<
€€ 
Models
€€ !
.
€€! "
Products
€€" *
>
€€* +!
GetAllOrderProducts
€€, ?
(
€€? @
int
€€@ C
orderID
€€D K
)
€€K L
{
‹‹ 	
return
›› 
Mapper
›› 
.
›› 
Map
›› 
(
›› 
from
›› "
s
››# $
in
››% '
_db
››( +
.
››+ ,
Product
››, 3
join
ﬁﬁ "
sa
ﬁﬁ# %
in
ﬁﬁ& (
_db
ﬁﬁ) ,
.
ﬁﬁ, -
OrderProduct
ﬁﬁ- 9
on
ﬁﬁ: <
s
ﬁﬁ= >
.
ﬁﬁ> ?
	ProductId
ﬁﬁ? H
equals
ﬂﬂ $
sa
ﬂﬂ% '
.
ﬂﬂ' (
	ProductId
ﬂﬂ( 1
where
‡‡ #
sa
‡‡$ &
.
‡‡& '
OrderId
‡‡' .
==
‡‡/ 1
orderID
‡‡2 9
select
·· $
s
··% &
)
··& '
;
··' (
}
‚‚ 	
public
‰‰ 
IEnumerable
‰‰ 
<
‰‰ 
Models
‰‰ !
.
‰‰! "
OrdPro
‰‰" (
>
‰‰( )
GetCountProducts
‰‰* :
(
‰‰: ;
int
‰‰; >
proID
‰‰? D
)
‰‰D E
{
ÂÂ 	
return
ÊÊ 
Mapper
ÊÊ 
.
ÊÊ 
Map
ÊÊ 
(
ÊÊ 
from
ÊÊ "
s
ÊÊ# $
in
ÊÊ% '
_db
ÊÊ( +
.
ÊÊ+ ,
OrderProduct
ÊÊ, 8
where
ÁÁ #
s
ÁÁ$ %
.
ÁÁ% &
	ProductId
ÁÁ& /
==
ÁÁ0 2
proID
ÁÁ3 8
select
ËË $
s
ËË% &
)
ËË& '
;
ËË' (
}
ÈÈ 	
public
ÎÎ 
void
ÎÎ 
Save
ÎÎ 
(
ÎÎ 
)
ÎÎ 
{
ÏÏ 	
_db
ÌÌ 
.
ÌÌ 
SaveChanges
ÌÌ 
(
ÌÌ 
)
ÌÌ 
;
ÌÌ 
}
ÓÓ 	
}
ÔÔ 
} Å

KC:\revature\project0\daniel-project0\redrobin\RedRobin.DataAccess\ResIng.cs
	namespace 	
RedRobin
 
. 

DataAccess 
{ 
public 

partial 
class 
ResIng 
{ 
public 
int 
ResIngId 
{ 
get !
;! "
set# &
;& '
}( )
public		 
int		 
RestaurantId		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
int

 
IngredientId

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 
decimal 
Qty 
{ 
get  
;  !
set" %
;% &
}' (
public 
virtual 
Ingredients "

Ingredient# -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 
virtual 

Restaurant !

Restaurant" ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
} 
} ﬂ
KC:\revature\project0\daniel-project0\redrobin\RedRobin.DataAccess\ResPro.cs
	namespace 	
RedRobin
 
. 

DataAccess 
{ 
public 

partial 
class 
ResPro 
{ 
public 
int 
ResProId 
{ 
get !
;! "
set# &
;& '
}( )
public		 
int		 
	ProductId		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
int

 
RestaurantId

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 
virtual 
Product 
Product &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
virtual 

Restaurant !

Restaurant" ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
} 
} õ
OC:\revature\project0\daniel-project0\redrobin\RedRobin.DataAccess\Restaurant.cs
	namespace 	
RedRobin
 
. 

DataAccess 
{ 
public 

partial 
class 

Restaurant #
{ 
public 

Restaurant 
( 
) 
{		 	
Orders

 
=

 
new

 
HashSet

  
<

  !
Orders

! '
>

' (
(

( )
)

) *
;

* +
ResIng 
= 
new 
HashSet  
<  !
ResIng! '
>' (
(( )
)) *
;* +
ResPro 
= 
new 
HashSet  
<  !
ResPro! '
>' (
(( )
)) *
;* +
} 	
public 
int 
RestaurantId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
RestLocation "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
	RestPhone 
{  !
get" %
;% &
set' *
;* +
}, -
public 
virtual 
ICollection "
<" #
Orders# )
>) *
Orders+ 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public 
virtual 
ICollection "
<" #
ResIng# )
>) *
ResIng+ 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public 
virtual 
ICollection "
<" #
ResPro# )
>) *
ResPro+ 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
} 
} 